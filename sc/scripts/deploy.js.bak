// We require the Hardhat Runtime Environment explicitly here. This is optional
// but useful for running the script in a standalone fashion through `node <script>`.
//
// You can also run a script with `npx hardhat run <script>`. If you do that, Hardhat
// will compile your contracts, add the Hardhat Runtime Environment's members to the
// global scope, and execute the script.
require('dotenv').config();
const { ethers, upgrades } = require("hardhat");

async function main() {
  let SC = await ethers.getContractFactory("CantoHackathon");
  const sc = await SC.deploy();
  console.log('address: ', sc.address);

}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});


// reset steps:
// 0. rm -rf cache
// 1. rm -rf .openzeppelin
// 2. rm -rf artifacts

// deploy:
// use nodejs v18
// npx hardhat compile
// npx hardhat run --network testnet scripts/deploy.js

// 0x8De16f9E86de402F3dBC910dAe30A70940806014
// npx hardhat verify --network testnet 0x8De16f9E86de402F3dBC910dAe30A70940806014















